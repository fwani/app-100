"""Initial migration

Revision ID: 548752011add
Revises: 
Create Date: 2025-09-09 15:49:56.020551

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '548752011add'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('app_user',
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.String(length=80), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_app_user_email'), 'app_user', ['email'], unique=True)
    op.create_table('room',
    sa.Column('code', sa.String(length=16), nullable=False),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_room_code'), 'room', ['code'], unique=True)
    op.create_table('anniversary',
    sa.Column('room_id', sa.BigInteger(), nullable=False),
    sa.Column('kind', sa.String(length=32), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('repeat_unit', sa.String(length=12), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_anniversary_room_id'), 'anniversary', ['room_id'], unique=False)
    op.create_table('place',
    sa.Column('room_id', sa.BigInteger(), nullable=False),
    sa.Column('title', sa.String(length=120), nullable=False),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('lng', sa.Float(), nullable=False),
    sa.Column('photos', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('visited_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_place_room_id'), 'place', ['room_id'], unique=False)
    op.create_table('post',
    sa.Column('room_id', sa.BigInteger(), nullable=False),
    sa.Column('author_id', sa.BigInteger(), nullable=True),
    sa.Column('text', sa.String(), nullable=True),
    sa.Column('photos', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('mood', sa.String(length=24), nullable=True),
    sa.Column('shot_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['app_user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_post_author_id'), 'post', ['author_id'], unique=False)
    op.create_index(op.f('ix_post_room_id'), 'post', ['room_id'], unique=False)
    op.create_table('recommend_cache',
    sa.Column('room_id', sa.BigInteger(), nullable=False),
    sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recommend_cache_room_id'), 'recommend_cache', ['room_id'], unique=False)
    op.create_table('room_member',
    sa.Column('room_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('joined_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['app_user.id'], ),
    sa.PrimaryKeyConstraint('room_id', 'user_id')
    )
    op.create_table('comment',
    sa.Column('post_id', sa.BigInteger(), nullable=False),
    sa.Column('author_id', sa.BigInteger(), nullable=True),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comment_author_id'), 'comment', ['author_id'], unique=False)
    op.create_index(op.f('ix_comment_post_id'), 'comment', ['post_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_comment_post_id'), table_name='comment')
    op.drop_index(op.f('ix_comment_author_id'), table_name='comment')
    op.drop_table('comment')
    op.drop_table('room_member')
    op.drop_index(op.f('ix_recommend_cache_room_id'), table_name='recommend_cache')
    op.drop_table('recommend_cache')
    op.drop_index(op.f('ix_post_room_id'), table_name='post')
    op.drop_index(op.f('ix_post_author_id'), table_name='post')
    op.drop_table('post')
    op.drop_index(op.f('ix_place_room_id'), table_name='place')
    op.drop_table('place')
    op.drop_index(op.f('ix_anniversary_room_id'), table_name='anniversary')
    op.drop_table('anniversary')
    op.drop_index(op.f('ix_room_code'), table_name='room')
    op.drop_table('room')
    op.drop_index(op.f('ix_app_user_email'), table_name='app_user')
    op.drop_table('app_user')
    # ### end Alembic commands ###
